name: skincube-app

services:
  mongo:
    image: mongo:7.0.12
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"  # Expose MongoDB port to host
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoAdmin
      - MONGO_INITDB_ROOT_PASSWORD=skincubeAdminPass
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - skincube-network
    command: mongod --auth

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - storage_data_on_backend:/app/public/resized
    env_file: ./backend/src/.env
    networks:
      - skincube-network
    depends_on:
      - mongo

  frontend:
    build:
      context: ./frontend-latest/Skinncube
      target: development
    restart: unless-stopped
    environment:
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - REACT_APP_DOMAIN=localhost:8000
    volumes:
      - ./frontend-latest/Skinncube/src:/app/src
      - ./frontend-latest/Skinncube/public:/app/public
    ports:
      - "3000:3000"
    networks:
      - skincube-network
    depends_on:
      - backend

  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    volumes:
      - ./caddy/Caddyfile.development:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - skincube-network
    depends_on:
      - frontend
      - backend

volumes:
  mongo_data:
  storage_data_on_backend:
  caddy_data:
  caddy_config:

networks:
  skincube-network:
    driver: bridge
